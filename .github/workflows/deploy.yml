name: Deploy Spring Boot App

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Grant execute permission for mvnw
        run: chmod +x ./mvnw

      - name: Build with Maven
        run: ./mvnw clean package

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: fitnesspro-service-jar
          path: target/*.jar

      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: fitnesspro-service-jar
          path: docker-build

      - name: Build Docker image
        run: |
          docker build -t nikolasluiz123/fitnesspro-service ./docker-build

      - name: Push Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push nikolasluiz123/fitnesspro-service

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: SSH and deploy
        run: |
          echo "${{ secrets.SERVER_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << EOF
            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
            docker pull nikolasluiz123/fitnesspro-service
            docker stop spring-app || true
            docker rm spring-app || true
            docker run -d -p 8080:8080 --name spring-app nikolasluiz123/fitnesspro-service
          EOF
          rm private_key.pem